wmake libso turbulenceModels
wmakeLnIncludeAll: running wmakeLnInclude on dependent libraries:
    wmakeLnInclude: linking include files to .//lnInclude
ln: failed to create symbolic link './evalGeno.H': File exists
Making dependency list for source file nutUKnoppWallFunctionFvPatchScalarField.C
Making dependency list for source file omegaKnoppWallFunctionFvPatchScalarField.C
Making dependency list for source file omegaRoughWallFunctionFvPatchScalarField.C
Making dependency list for source file omegaViscosityRatioFvPatchScalarField.C
Making dependency list for source file ReThetatInletFvPatchScalarField.C
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c derivedFvPatchFields/ReThetatInlet/ReThetatInletFvPatchScalarField.C -o Make/linux64GccDPInt32Opt/derivedFvPatchFields/ReThetatInlet/ReThetatInletFvPatchScalarField.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c derivedFvPatchFields/omegaViscosityRatio/omegaViscosityRatioFvPatchScalarField.C -o Make/linux64GccDPInt32Opt/derivedFvPatchFields/omegaViscosityRatio/omegaViscosityRatioFvPatchScalarField.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaRoughWallFunction/omegaRoughWallFunctionFvPatchScalarField.C -o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaRoughWallFunction/omegaRoughWallFunctionFvPatchScalarField.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaKnoppWallFunction/omegaKnoppWallFunctionFvPatchScalarField.C -o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaKnoppWallFunction/omegaKnoppWallFunctionFvPatchScalarField.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c derivedFvPatchFields/wallFunctions/nutWallFunctions/nutUKnoppWallFunction/nutUKnoppWallFunctionFvPatchScalarField.C -o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/nutWallFunctions/nutUKnoppWallFunction/nutUKnoppWallFunctionFvPatchScalarField.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I./lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -fuse-ld=bfd -shared -Xlinker --add-needed -Xlinker --no-as-needed Make/linux64GccDPInt32Opt/derivedFvPatchFields/ReThetatInlet/ReThetatInletFvPatchScalarField.o Make/linux64GccDPInt32Opt/derivedFvPatchFields/omegaViscosityRatio/omegaViscosityRatioFvPatchScalarField.o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaRoughWallFunction/omegaRoughWallFunctionFvPatchScalarField.o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/omegaWallFunctions/omegaKnoppWallFunction/omegaKnoppWallFunctionFvPatchScalarField.o Make/linux64GccDPInt32Opt/derivedFvPatchFields/wallFunctions/nutWallFunctions/nutUKnoppWallFunction/nutUKnoppWallFunctionFvPatchScalarField.o -L/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/platforms/linux64GccDPInt32Opt/lib \
    -lturbulenceModels -lfiniteVolume -lmeshTools  -o /home/unimelb.edu.au/lcampoli/OpenFOAM/lcampoli-7/platforms/linux64GccDPInt32Opt/lib/libmyTurbulenceModels.so
wmake libso incompressible
wmakeLnInclude: linking include files to ./lnInclude
Making dependency list for source file myTurbulentTransportModels.C
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I../turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c turbulentTransportModels/myTurbulentTransportModels.C -o Make/linux64GccDPInt32Opt/turbulentTransportModels/myTurbulentTransportModels.o
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C: In instantiation of â€˜void Foam::RASModels::kOmegaSST_BOR_frozen_R<BasicTurbulenceModel>::correct() [with BasicTurbulenceModel = Foam::IncompressibleTurbulenceModel<Foam::transportModel>]â€™:
turbulentTransportModels/myTurbulentTransportModels.C:122:1:   required from here
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: error: no match for â€˜operator+â€™ (operand types are â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ and â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™)
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Istream.H:187,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/token.H:460,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILListIO.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILList.C:105,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILList.H:390,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/ILList.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IDLList.H:35,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/entry.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dictionary.H:53,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/baseIOdictionary.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IOdictionary.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:36:13: note: candidate: Foam::zero Foam::operator+(const Foam::zero&, const Foam::zero&)
 inline zero operator+(const zero&, const zero&)
             ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:36:13: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::zero&â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:42:20: note: candidate: template<class Type> const Type& Foam::operator+(const Type&, const Foam::zero&)
 inline const Type& operator+(const Type& t, const zero&)
                    ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:42:20: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::mag(const Foam::GeometricField<Type, PatchField, GeoMesh>&) [with Type = double; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]()â€™ (type â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™) to type â€˜const Foam::zero&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zero.H:107:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UList.H:49,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/List.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/HashTable.C:30,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Istream.H:187,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/token.H:460,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILListIO.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILList.C:105,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/UILList.H:390,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/ILList.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IDLList.H:35,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/entry.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dictionary.H:53,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/baseIOdictionary.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IOdictionary.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:48:20: note: candidate: template<class Type> const Type& Foam::operator+(const Foam::zero&, const Type&)
 inline const Type& operator+(const zero&, const Type& t)
                    ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroI.H:48:20: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::operator*<Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> > >((*(const Foam::one*)(& Foam::operator*((& alpha)->Foam::geometricOneField::operator()(), (& rho)->Foam::geometricOneField::operator()()))), Foam::RASModels::kOmegaSST_BOR_frozen_R<Foam::IncompressibleTurbulenceModel<Foam::transportModel> >::Pk(G))â€™ (type â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™) to type â€˜const Foam::zero&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/VectorSpace.H:229:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dictionary.H:62,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/baseIOdictionary.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IOdictionary.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/VectorSpaceI.H:662:13: note: candidate: template<class Form, class Cmpt, unsigned char Ncmpts> Form Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 inline Form operator+
             ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/VectorSpaceI.H:662:13: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/baseIOdictionary.H:43:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/IOdictionary.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dictionary.H:602:12: note: candidate: Foam::dictionary Foam::operator+(const Foam::dictionary&, const Foam::dictionary&)
 dictionary operator+(const dictionary& dict1, const dictionary& dict2);
            ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dictionary.H:602:12: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::dictionary&â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:680:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::SphericalTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator+(const SphericalTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:680:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::SphericalTensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:693:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::Tensor<Cmpt>&, const Foam::SphericalTensor<Cmpt>&)
 operator+(const Tensor<Cmpt>& t1, const SphericalTensor<Cmpt>& st2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:693:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::Tensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:816:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::SymmTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator+(const SymmTensor<Cmpt>& st1, const Tensor<Cmpt>& t2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:816:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::SymmTensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Tensor.H:231:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:829:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::Tensor<Cmpt>&, const Foam::SymmTensor<Cmpt>&)
 operator+(const Tensor<Cmpt>& t1, const SymmTensor<Cmpt>& st2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/TensorI.H:829:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::Tensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:423:1: note: candidate: template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const Foam::SphericalTensor<Cmpt>&, const Foam::SymmTensor<Cmpt>&)
 operator+(const SphericalTensor<Cmpt>& spt1, const SymmTensor<Cmpt>& st2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:423:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::SphericalTensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensor.H:155:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/symmTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/fieldTypes.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/primitiveFieldsFwd.H:36,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:436:1: note: candidate: template<class Cmpt> Foam::SymmTensor<Cmpt> Foam::operator+(const Foam::SymmTensor<Cmpt>&, const Foam::SphericalTensor<Cmpt>&)
 operator+(const SymmTensor<Cmpt>& st1, const SphericalTensor<Cmpt>& spt2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/SymmTensorI.H:436:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::SymmTensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:652:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::UList<T>&, const Foam::UList<Key>&)
 operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:652:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type1>& f1, const UList<Type2>& f2)                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::UList<T>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:662:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::UList<T>&, const Foam::tmp<Foam::Field<Type2> >&)
 operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:662:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type1>& f1, const tmp<Field<Type2>>& tf2)              \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::UList<T>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:673:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::UList<Key>&)
 operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:673:1: note:   template argument deduction/substitution failed:
 operator Op(const tmp<Field<Type1>>& tf1, const UList<Type2>& f2)              \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::Field<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:684:1: note: candidate: template<class Type1, class Type2> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::tmp<Foam::Field<Type2> >&)
 operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:684:1: note:   template argument deduction/substitution failed:
 operator Op(const tmp<Field<Type1>>& tf1, const tmp<Field<Type2>>& tf2)        \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::Field<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:710:1: note: candidate: template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::UList<T>&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:710:1: note:   template argument deduction/substitution failed:
 operator Op(const UList<Type>& f1, const VectorSpace<Form,Cmpt,nCmpt>& vs)     \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::UList<T>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:720:1: note: candidate: template<class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::Field<Type> >&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator Op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:720:1: note:   template argument deduction/substitution failed:
 operator Op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::Field<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:748:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::UList<Type>&)
 operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:748:1: note:   template argument deduction/substitution failed:
 operator Op(const VectorSpace<Form,Cmpt,nCmpt>& vs, const UList<Type>& f1)     \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.C:691:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Field.H:338,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:758:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type> Foam::tmp<Foam::Field<typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::Field<Type> >&)
 operator Op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:758:1: note:   template argument deduction/substitution failed:
 operator Op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctions.C:770:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:42:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const Foam::UList<double>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const scalar& {aka const double&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator+(const scalar&, const Foam::tmp<Foam::Field<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const scalar& {aka const double&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator+(const Foam::UList<double>&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 2 from â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ to â€˜const scalar& {aka const double&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<double> > Foam::operator+(const Foam::tmp<Foam::Field<double> >&, const scalar&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::tmp<Foam::Field<double> >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarField.H:83:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:383:29: note: candidate: Foam::dimensionSet Foam::operator+(const Foam::dimensionSet&, const Foam::dimensionSet&)
         friend dimensionSet operator+
                             ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:383:29: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::dimensionSet&â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Matrix.H:383:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/RectangularMatrix.H:41,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarMatrices.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSets.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionSet.H:442,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Matrix.C:464:6: note: candidate: template<class Form, class Type> Form Foam::operator+(const Foam::Matrix<Form, Type>&, const Foam::Matrix<Form, Type>&)
 Form Foam::operator+(const Matrix<Form, Type>& A, const Matrix<Form, Type>& B)
      ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/Matrix.C:464:6: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::Matrix<Form, Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.H:344:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.C:688:25: note: candidate: template<class Type> Foam::dimensioned<Type> Foam::operator+(const Foam::dimensioned<Type>&, const Foam::dimensioned<Type>&)
 Foam::dimensioned<Type> Foam::operator+
                         ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedType.C:688:25: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedTypes.H:31:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:49:19: note: candidate: Foam::dimensionedScalar Foam::operator+(const dimensionedScalar&, Foam::scalar)
 dimensionedScalar operator+(const dimensionedScalar&, const scalar);
                   ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:49:19: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const dimensionedScalar& {aka const Foam::dimensioned<double>&}â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:50:19: note: candidate: Foam::dimensionedScalar Foam::operator+(Foam::scalar, const dimensionedScalar&)
 dimensionedScalar operator+(const scalar, const dimensionedScalar&);
                   ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/dimensionedScalar.H:50:19: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜Foam::scalar {aka double}â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:504:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::dimensioned<double>&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:504:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<double, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:526:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const Foam::DimensionedField<double, GeoMesh>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:526:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<double, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:537:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::dimensioned<double>&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:537:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::DimensionedField<double, GeoMesh>â€™ and â€˜Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:563:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const scalar&, const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:563:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:645:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::DimensionedField<double, GeoMesh>â€™ and â€˜Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:576:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::DimensionedField<double, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:576:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<double, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::DimensionedField<double, GeoMesh>&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:598:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<double, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:609:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:609:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::mag(const Foam::GeometricField<Type, PatchField, GeoMesh>&) [with Type = double; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]()â€™ (type â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™) to type â€˜const Foam::dimensioned<double>&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.H:157,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:386,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:635:44: note: candidate: template<class GeoMesh> Foam::tmp<Foam::DimensionedField<double, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<double, GeoMesh> >&, const scalar&)
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:635:44: note:   template argument deduction/substitution failed:
 tmp<DimensionedField<ReturnType, GeoMesh>> operator Op                         \
                                            ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctionsM.C:646:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedScalarField.C:87:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::mag(const Foam::GeometricField<Type, PatchField, GeoMesh>&) [with Type = double; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]()â€™ (type â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™) to type â€˜const scalar& {aka const double&}â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:346:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::DimensionedField<TypeR, GeoMesh>&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:346:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<TypeR, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:370:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::DimensionedField<TypeR, GeoMesh>&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:370:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<TypeR, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:397:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:397:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<Type1, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:424:1: note: candidate: template<class Type1, class Type2, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<TypeR, GeoMesh> >&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:424:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::DimensionedField<Type1, GeoMesh>â€™ and â€˜Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:455:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const Foam::DimensionedField<Type1, GeoMesh>&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:455:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<Type1, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:480:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const Foam::DimensionedField<Type2, GeoMesh>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:480:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<Type2, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:492:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Type, Form>::type, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:492:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:519:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:519:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:531:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::DimensionedField<Type1, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:531:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:555:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::DimensionedField<Type2, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:555:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:566:1: note: candidate: template<class Form, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<arg1, arg2>::type, GeoMesh> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::DimensionedField<Type1, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:566:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.C:648:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedField.H:389,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:593:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, class GeoMesh> Foam::tmp<Foam::DimensionedField<typename Foam::typeOfSum<Form, Type>::type, GeoMesh> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::DimensionedField<Type2, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:593:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DimensionedFieldFunctions.C:602:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:197,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const Foam::FieldField<Field, double>&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:407:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, double>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:197,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const scalar&, const Foam::tmp<Foam::FieldField<Field, double> >&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:422:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:487:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::FieldField<Field, double>â€™ and â€˜Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:197,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const Foam::FieldField<Field, double>&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:455:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, double>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:32:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.H:158,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:26,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:197,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note: candidate: template<template<class> class Field> Foam::tmp<Foam::FieldField<Field, double> > Foam::operator+(const Foam::tmp<Foam::FieldField<Field, double> >&, const scalar&)
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:470:36: note:   template argument deduction/substitution failed:
 tmp<FieldField<Field, ReturnType>> operator Op                                 \
                                    ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctionsM.C:488:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/scalarFieldField.C:85:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::FieldField<Field, double>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:654:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::FieldField<Field, Type1>&, const Foam::FieldField<Field2, Type2>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:654:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, Type1>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:671:1: note: candidate: template<template<class> class Field, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::FieldField<Field, Type>&, const Foam::tmp<Foam::FieldField<Field, Type1> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:671:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:197:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:314:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::FieldField<Field, Type1>&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:438:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:314:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.H:438:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, Type1>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:719:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::FieldField<Field, Type1> >&, const Foam::FieldField<Field2, Type2>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:719:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::FieldField<Field, Type1>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:743:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Field1, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::FieldField<Field, Type1> >&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:743:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::FieldField<Field, Type1>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:791:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::FieldField<Field, Type>&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:791:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:815:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::tmp<Foam::FieldField<Field, Type> >&, const Foam::VectorSpace<Form, Cmpt, nCmpt>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:815:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::FieldField<Field, Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:861:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, nCmpt>&, const Foam::FieldField<Field, Type>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:861:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, nCmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:885:1: note: candidate: template<template<class> class Field, class Type, class Form, class Cmpt, unsigned char nCmpt> Foam::tmp<Foam::FieldField<Field, typename Foam::typeOfSum<Form, Type>::type> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, nCmpt>&, const Foam::tmp<Foam::FieldField<Field, Type> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:885:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, nCmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.C:410:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldField.H:200,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:695:1: note: candidate: template<template<class> class Field1, template<class> class Field2, class Type1, class Type2> Foam::tmp<Foam::FieldField<Foam::Field, typename Foam::typeOfSum<Type1, Type2>::type> > Foam::operator+(const Foam::FieldField<Field, Type1>&, const Foam::tmp<Foam::FieldField<Field2, Type2> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:695:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFieldFunctions.C:901:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::FieldField<Field, Type1>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:42:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/lduInterface.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/lduInterfaceField.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/lduInterfaceFieldPtrsList.H:35,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:46,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const Foam::UList<int>&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const label& {aka const int&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator+(const label&, const Foam::tmp<Foam::Field<int> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const label& {aka const int&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator+(const Foam::UList<int>&, const label&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::UList<int>&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<int> > Foam::operator+(const Foam::tmp<Foam::Field<int> >&, const label&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::tmp<Foam::Field<int> >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/labelField.H:54:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(label, label, label, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensorI.H:124:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::DiagTensor<Cmpt>&, const Foam::Tensor<Cmpt>&)
 operator+(const DiagTensor<Cmpt>& dt1, const Tensor<Cmpt>& t2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensorI.H:124:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DiagTensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensor.H:115:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensor.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensorI.H:137:1: note: candidate: template<class Cmpt> Foam::Tensor<Cmpt> Foam::operator+(const Foam::Tensor<Cmpt>&, const Foam::DiagTensor<Cmpt>&)
 operator+(const Tensor<Cmpt>& t1, const DiagTensor<Cmpt>& dt2)
 ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/DiagTensorI.H:137:1: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::Tensor<Cmpt>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:42:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/coupledPolyPatch.H:41,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorPolyPatch.H:42,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/processorTopology.H:30,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:84,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::UList<Foam::DiagTensor<double> >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:166:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::UList<Foam::DiagTensor<double> >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::UList<Foam::DiagTensor<double> >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:173:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::UList<Foam::DiagTensor<double> >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:180:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:187:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:60:1: note: in expansion of macro â€˜BINARY_OPERATORâ€™
 BINARY_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const Foam::UList<Foam::Tensor<double> >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:207:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const diagTensor& {aka const Foam::DiagTensor<double>&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const diagTensor&, const Foam::tmp<Foam::Field<Foam::Tensor<double> > >&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:214:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const diagTensor& {aka const Foam::DiagTensor<double>&}â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:247:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpFunc)              \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::UList<Foam::DiagTensor<double> >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:232:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::UList<Foam::DiagTensor<double> >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note: candidate: Foam::tmp<Foam::Field<Foam::Tensor<double> > > Foam::operator+(const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&, const tensor&)
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:239:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::tmp<Foam::Field<Foam::DiagTensor<double> > >&â€™
 tmp<Field<ReturnType>> operator Op                                             \
                        ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/FieldFunctionsM.H:248:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/diagTensorField.H:63:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(tensor, diagTensor, tensor, +, add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/quaternion.H:303:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/transformField.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:629,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/quaternionI.H:623:25: note: candidate: Foam::quaternion Foam::operator+(const Foam::quaternion&, const Foam::quaternion&)
 inline Foam::quaternion Foam::operator+
                         ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/quaternionI.H:623:25: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::quaternion&â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/septernion.H:205:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/transformField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransform.H:45,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:629,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/septernionI.H:174:25: note: candidate: Foam::septernion Foam::operator+(const Foam::septernion&, const vector&)
 inline Foam::septernion Foam::operator+
                         ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/septernionI.H:174:25: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::septernion&â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/septernionI.H:184:25: note: candidate: Foam::septernion Foam::operator+(const vector&, const Foam::septernion&)
 inline Foam::septernion Foam::operator+
                         ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/septernionI.H:184:25: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const vector& {aka const Foam::Vector<double>&}â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransform.H:260:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/mapDistribute.H:138,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshDataTemplates.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/globalMeshData.H:629,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricBoundaryField.C:28,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1558,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:252:36: note: candidate: Foam::vectorTensorTransform Foam::operator+(const Foam::vectorTensorTransform&, const vector&)
 inline Foam::vectorTensorTransform Foam::operator+
                                    ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:252:36: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::vectorTensorTransform&â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:262:36: note: candidate: Foam::vectorTensorTransform Foam::operator+(const vector&, const Foam::vectorTensorTransform&)
 inline Foam::vectorTensorTransform Foam::operator+
                                    ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/vectorTensorTransformI.H:262:36: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const vector& {aka const Foam::Vector<double>&}â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:552:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<TypeR, PatchField, GeoMesh>&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:552:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<TypeR, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<TypeR, PatchField, GeoMesh>&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:580:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<TypeR, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:611:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:611:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<TypeR, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:642:1: note: candidate: template<class Type1, class Type2, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<TypeR, PatchField, GeoMesh> >&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:642:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<TypeR, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:688:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<Type1, PatchField, GeoMesh>&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:688:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<Type1, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:720:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<Type2, PatchField, GeoMesh>&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:720:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<Type2, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:733:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type, Form>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&, const Foam::dimensioned<Type>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:733:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<Type1, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:767:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >&, const Foam::VectorSpace<Form, Cmpt, Ncmpts>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:767:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<Type2, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:794:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::GeometricField<Type1, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:794:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:825:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::GeometricField<Type2, PatchField, GeoMesh>&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:825:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:837:1: note: candidate: template<class Form, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Type1, Type2>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::GeometricField<Type1, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:837:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.C:1559:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricField.H:721,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:871:1: note: candidate: template<class Form, class Cmpt, unsigned char nCmpt, class Type, template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<typename Foam::typeOfSum<Form, Type>::type, PatchField, GeoMesh> > Foam::operator+(const Foam::VectorSpace<Form, Cmpt, Ncmpts>&, const Foam::tmp<Foam::GeometricField<Type2, PatchField, GeoMesh> >&)
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:871:1: note:   template argument deduction/substitution failed:
 operator op                                                                    \
 ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctions.C:880:1: note: in expansion of macro â€˜PRODUCT_OPERATORâ€™
 PRODUCT_OPERATOR(typeOfSum, +, add)
 ^~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::VectorSpace<Form, Cmpt, Ncmpts>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:603:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::dimensioned<double>&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:603:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<double, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:625:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const Foam::GeometricField<double, PatchField, GeoMesh>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:625:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<double, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:636:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::dimensioned<double>&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:636:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::operator*<Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> > >((*(const Foam::one*)(& Foam::operator*((& alpha)->Foam::geometricOneField::operator()(), (& rho)->Foam::geometricOneField::operator()()))), Foam::RASModels::kOmegaSST_BOR_frozen_R<Foam::IncompressibleTurbulenceModel<Foam::transportModel> >::Pk(G))â€™ (type â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™) to type â€˜const Foam::dimensioned<double>&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:662:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const scalar&, const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:662:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:757:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_SFâ€™
     BINARY_TYPE_OPERATOR_SF(ReturnType, Type1, Type2, Op, OpName, OpFunc)      \
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::operator*<Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> > >((*(const Foam::one*)(& Foam::operator*((& alpha)->Foam::geometricOneField::operator()(), (& rho)->Foam::geometricOneField::operator()()))), Foam::RASModels::kOmegaSST_BOR_frozen_R<Foam::IncompressibleTurbulenceModel<Foam::transportModel> >::Pk(G))â€™ (type â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™) to type â€˜const scalar& {aka const double&}â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:687:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<double, PatchField, GeoMesh>&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:687:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<double, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:709:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::GeometricField<double, PatchField, GeoMesh>&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:709:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::GeometricField<double, PatchField, GeoMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:720:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const Foam::dimensioned<double>&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:720:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<double, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:29:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.H:173,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFields.H:34,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/volFields.H:37,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/nearWallDist.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:746:54: note: candidate: template<template<class> class PatchField, class GeoMesh> Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> > Foam::operator+(const Foam::tmp<Foam::GeometricField<double, PatchField, GeoMesh> >&, const scalar&)
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:746:54: note:   template argument deduction/substitution failed:
 tmp<GeometricField<ReturnType, PatchField, GeoMesh>> operator Op               \
                                                      ^
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricFieldFunctionsM.C:758:5: note: in expansion of macro â€˜BINARY_TYPE_OPERATOR_FSâ€™
     BINARY_TYPE_OPERATOR_FS(ReturnType, Type1, Type2, Op, OpName, OpFunc)
     ^~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/GeometricScalarField.C:103:1: note: in expansion of macro â€˜BINARY_TYPE_OPERATORâ€™
 BINARY_TYPE_OPERATOR(scalar, scalar, scalar, +, '+', add)
 ^~~~~~~~~~~~~~~~~~~~
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<double, PatchField, GeoMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/one.H:98:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneField.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneFieldField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/geometricOneField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/turbulenceModel.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/TurbulenceModel.H:38,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:39,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneI.H:44:15: note: candidate: Foam::scalar Foam::operator+(const scalar&, const Foam::one&)
 inline scalar operator+(const scalar& t, const one&)
               ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneI.H:44:15: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const scalar& {aka const double&}â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneI.H:49:15: note: candidate: Foam::scalar Foam::operator+(const Foam::one&, const scalar&)
 inline scalar operator+(const one&, const scalar& t)
               ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/oneI.H:49:15: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::one&â€™
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1554:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1554:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1567:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1567:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1580:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1580:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1593:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1593:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1607:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::DimensionedField<Type, Foam::volMesh>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1607:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1620:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1620:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1634:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1634:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1648:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::DimensionedField<Type, Foam::volMesh>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1648:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1661:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1661:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1675:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1675:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1689:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1689:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<Type, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1702:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1702:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1716:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1716:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1730:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::DimensionedField<Type, Foam::volMesh>&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1730:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::DimensionedField<Type, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1743:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::DimensionedField<Type, Foam::volMesh> >&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1743:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1757:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh> >&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1757:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::GeometricField<Type, Foam::fvPatchField, Foam::volMesh>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1996:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::fvMatrix<Type>&, const Foam::dimensioned<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:1996:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::fvMatrix<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2009:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::tmp<Foam::fvMatrix<Type> >&, const Foam::dimensioned<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2009:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   mismatched types â€˜Foam::fvMatrix<Type>â€™ and â€˜Foam::DimensionedField<double, Foam::volMesh>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2022:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::fvMatrix<Type>&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2022:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.H:1058:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/incompressible/lnInclude/IncompressibleTurbulenceModel.H:41,
                 from turbulentTransportModels/myTurbulentTransportModels.C:26:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2035:33: note: candidate: template<class Type> Foam::tmp<Foam::fvMatrix<Type> > Foam::operator+(const Foam::dimensioned<Type>&, const Foam::tmp<Foam::fvMatrix<Type> >&)
 Foam::tmp<Foam::fvMatrix<Type>> Foam::operator+
                                 ^~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvMatrix.C:2035:33: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ is not derived from â€˜const Foam::dimensioned<Type>â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroField.H:82:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/geometricZeroField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvcDdt.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvc.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/linearViscousStress.C:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/linearViscousStress.H:111,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/Stokes.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/laminarModel.C:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/laminarModel.H:199,
                 from turbulentTransportModels/myTurbulentTransportModels.C:31:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:61:24: note: candidate: const Foam::zeroField Foam::operator+(const Foam::zeroField&, const Foam::zeroField&)
 inline const zeroField operator+(const zeroField&, const zeroField&)
                        ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:61:24: note:   no known conversion for argument 1 from â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™ to â€˜const Foam::zeroField&â€™
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:67:20: note: candidate: template<class Type> const Type& Foam::operator+(const Type&, const Foam::zeroField&)
 inline const Type& operator+(const Type& t, const zeroField&)
                    ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:67:20: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::mag(const Foam::GeometricField<Type, PatchField, GeoMesh>&) [with Type = double; PatchField = Foam::fvPatchField; GeoMesh = Foam::volMesh]()â€™ (type â€˜Foam::tmp<Foam::GeometricField<double, Foam::fvPatchField, Foam::volMesh> >â€™) to type â€˜const Foam::zeroField&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroField.H:82:0,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/geometricZeroField.H:40,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvcDdt.H:43,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude/fvc.H:44,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/linearViscousStress.C:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/linearViscousStress.H:111,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/Stokes.H:39,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/laminarModel.C:27,
                 from /home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude/laminarModel.H:199,
                 from turbulentTransportModels/myTurbulentTransportModels.C:31:
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:73:20: note: candidate: template<class Type> const Type& Foam::operator+(const Foam::zeroField&, const Type&)
 inline const Type& operator+(const zeroField&, const Type& t)
                    ^~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude/zeroFieldI.H:73:20: note:   template argument deduction/substitution failed:
In file included from ../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.H:371:0,
                 from turbulentTransportModels/myTurbulentTransportModels.C:69:
../turbulenceModels/lnInclude/kOmegaSST_BOR_frozen_R.C:825:7: note:   cannot convert â€˜Foam::operator*<Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> > >((*(const Foam::one*)(& Foam::operator*((& alpha)->Foam::geometricOneField::operator()(), (& rho)->Foam::geometricOneField::operator()()))), Foam::RASModels::kOmegaSST_BOR_frozen_R<Foam::IncompressibleTurbulenceModel<Foam::transportModel> >::Pk(G))â€™ (type â€˜const Foam::tmp<Foam::DimensionedField<double, Foam::volMesh> >â€™) to type â€˜const Foam::zeroField&â€™
         alpha()*rho()*Pk(G)
         ~~~~~~~~~~~~~~~~~~~
       + mag(alpha()*rho()*Rterm)
       ^~~~~~~~~~~~~~~~~~~~~~~~~~
/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/wmake/rules/General/transform:25: recipe for target 'Make/linux64GccDPInt32Opt/turbulentTransportModels/myTurbulentTransportModels.o' failed
make: *** [Make/linux64GccDPInt32Opt/turbulentTransportModels/myTurbulentTransportModels.o] Error 1
wmake libso compressible
wmakeLnInclude: linking include files to ./lnInclude
Making dependency list for source file myTurbulentFluidThermoModels.C
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I../turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/compressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels/compressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/specie/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/solidThermo/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/solidSpecie/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -c turbulentFluidThermoModels/myTurbulentFluidThermoModels.C -o Make/linux64GccDPInt32Opt/turbulentFluidThermoModels/myTurbulentFluidThermoModels.o
g++ -std=c++11 -m64 -Dlinux64 -DWM_ARCH_OPTION=64 -DWM_DP -DWM_LABEL_SIZE=32 -Wall -Wextra -Wold-style-cast -Wnon-virtual-dtor -Wno-unused-parameter -Wno-invalid-offsetof -Wno-attributes -O3  -DNoRepository -ftemplate-depth-100 -I../turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/compressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/TurbulenceModels/turbulenceModels/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/transportModels/compressible/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/basic/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/specie/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/solidThermo/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/thermophysicalModels/solidSpecie/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/finiteVolume/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/meshTools/lnInclude -IlnInclude -I. -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OpenFOAM/lnInclude -I/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/src/OSspecific/POSIX/lnInclude   -fPIC -fuse-ld=bfd -shared -Xlinker --add-needed -Xlinker --no-as-needed Make/linux64GccDPInt32Opt/turbulentFluidThermoModels/myTurbulentFluidThermoModels.o -L/home/unimelb.edu.au/lcampoli/OpenFOAM/OpenFOAM-7/platforms/linux64GccDPInt32Opt/lib \
    -lcompressibleTransportModels -lfluidThermophysicalModels -lsolidThermo -lsolidSpecie -lturbulenceModels -lspecie -lfiniteVolume -lmeshTools  -o /home/unimelb.edu.au/lcampoli/OpenFOAM/lcampoli-7/platforms/linux64GccDPInt32Opt/lib/libmyCompressibleTurbulenceModels.so
